% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_all.R
\name{query_all}
\alias{query_all}
\title{Query all CpGs from input genomic regions}
\usage{
query_all(
  bedfiles,
  regions,
  bismark = FALSE,
  merged = TRUE,
  sparse = FALSE,
  nthreads = NULL
)
}
\arguments{
\item{bedfiles}{A vector of bedfile paths}

\item{regions}{A vector of genomic regions strings}

\item{bismark}{Whether the input is a bismark coverage file}

\item{merged}{Whether the input strands have been merged/collapsed}

\item{sparse}{Whether to return M and coverage matrices as sparse matrices
("dgCMatrix"). Set this \code{TRUE} only for scWGBS data}

\item{nthreads}{Set number of threads to use overriding the
\code{"iscream.threads"} option. See \code{?set_threads} for more information.}
}
\value{
A named list of
\itemize{
\item M and coverage matrices
\item a character vector of chromosomes and numeric vector of corresponding CpG
base positions
\item a character vector of the input sample names
}
}
\description{
Queries the provided regions and produces M and Coverage matrices and their
genomic positions. Parallelized across files using threads from the
\code{"iscream.threads"} option. The output of \code{query_all} may be used to create
a BSseq object: \code{do.call(BSseq, query_all(...))}.
}
\examples{
bedfiles <- system.file("extdata", package = "iscream") |>
  list.files(pattern = "[a|b|c|d].bed.gz$", full.names = TRUE)
# examine the bedfiles
colnames <- c("chr", "start", "end", "beta", "coverage")
lapply(bedfiles, function(i) knitr::kable(read.table(i, col.names = colnames)))

# make a vector of regions
regions <- c("chr1:1-6", "chr1:7-10", "chr1:11-14")
query_all(bedfiles, regions)
# for BSseq object run
\dontrun{
library(bsseq)
do.call(BSseq, query_all(bedfiles, regions))
}
}
