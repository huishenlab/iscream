% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/region_map.R
\name{region_map}
\alias{region_map}
\title{Run a defined function over CpGs from genomic regions}
\usage{
region_map(
  bedfiles,
  regions,
  fun = "aggregate",
  bismark = FALSE,
  mval = TRUE,
  set_region_rownames = FALSE,
  nthreads = NULL
)
}
\arguments{
\item{bedfiles}{A vector of bedfile paths}

\item{regions}{A vector of genomic regions strings. If a named vector is
provided, the names will be used in the feature column instead of the
genomic regions string}

\item{fun}{Function to apply over the region. See details.}

\item{bismark}{Whether the input is a bismark coverage file}

\item{mval}{Whether to calculate the M value (coverage \eqn{\times \beta})
or use the beta value
when applying the function.}

\item{set_region_rownames}{Use the region strings as the returned data
frame's rownames. Can be useful if you have a named vector of regions and
want both the rownames and the feature names.}

\item{nthreads}{Set number of threads to use overriding the
\code{"iscream.threads"} option. See \code{?set_threads} for more information.}
}
\value{
A data.frame
}
\description{
Run a function on the CpGs in bedfiles across genomic regions. Currently
supported functions are aggregate and average. Parallelized across files
using threads from the \code{"iscream.threads"} option.
}
\details{
Available functions:
\itemize{
\item \code{"aggregate"} sums the values in the region with aggregated beta values if
\verb{mval =} FALSE and aggregated M values if \verb{mval =} TRUE
\item \code{"average"} averages the values in the region with average beta values if
\verb{mval =} FALSE and average M values if \verb{mval =} TRUE
}
}
\examples{
bedfiles <- system.file("extdata", package = "iscream") |>
  list.files(pattern = "[a|b|c|d].bed.gz$", full.names = TRUE)
# examine the bedfiles
colnames <- c("chr", "start", "end", "beta", "coverage")
lapply(bedfiles, function(i) knitr::kable(read.table(i, col.names = colnames)))

# make a vector of regions
regions <- c("chr1:1-6", "chr1:7-10", "chr1:11-14")
region_map(bedfiles, regions)
region_map(bedfiles, regions, mval = FALSE)
region_map(bedfiles, regions, fun = "average")
}
