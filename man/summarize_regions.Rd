% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarize_regions.R
\name{summarize_regions}
\alias{summarize_regions}
\title{Summarize information over genomic regions from any BED file}
\usage{
summarize_regions(
  bedfiles,
  regions,
  columns,
  col_names,
  fun = "all",
  feature_col = NULL,
  set_region_rownames = FALSE,
  nthreads = NULL
)
}
\arguments{
\item{bedfiles}{A vector of bedfile paths}

\item{regions}{A vector, data frame or GenomicRanges of genomic regions. See
details.}

\item{columns}{A vector of indices of the numeric columns to be summarized}

\item{col_names}{A vector of names to use for \code{columns} in the output}

\item{fun}{Function(s) to apply over the region. See details.}

\item{feature_col}{If the input is a dataframe, the column to use as the
feature label instead of the genomic region string}

\item{set_region_rownames}{Use the region strings as the returned data
frame's rownames. Can be useful if you have a named regions and want both
the regions strings rownames and the feature names.}

\item{nthreads}{Set number of threads to use overriding the
\code{"iscream.threads"} option. See \code{?set_threads} for more information.}
}
\value{
A data.frame
}
\description{
Run summarizing functions on bedfile records across genomic regions.
Parallelized across files using threads from the \code{"iscream.threads"} option.
}
\details{
The input regions may be string vector in the form "chr:start-end"
or a GRanges object. If a data frame is provided, they must have "chr",
"start", and "end" columns. If the string vector and GenomicRanges inputs
are named, the names will be used to describe each feature in the output
dataframe. If input dataframes have a feature column, set \code{feature_col} to
that column name to populate the output's feature column.

Supported \code{fun} arguments are given below.
\itemize{
\item Sum: \code{"sum"}
\item Mean: \code{"mean"}
\item Median: \code{"median"}
\item Standard deviation: \code{"stddev"}
\item Variance: \code{"variance"}
\item Minimum: \code{"min"}
\item Maximum: \code{"max"}
\item Range: \code{"range"}
\item No. of records in the region: \code{"count"}
}

The summarizing computations are backed by the Armadillo library. See
\url{https://arma.sourceforge.net/docs.html#stats_fns} for futher details on the
supported functions
}
\examples{
bedfiles <- system.file("extdata", package = "iscream") |>
  list.files(pattern = "[a|b|c|d].bed.gz$", full.names = TRUE)
# examine the bedfiles
colnames <- c("chr", "start", "end", "beta", "coverage")
lapply(bedfiles, function(i) knitr::kable(read.table(i, col.names = colnames)))

# make a vector of regions
regions <- c("chr1:1-6", "chr1:7-10", "chr1:11-14")
summarize_regions(bedfiles, regions, columns = c(4, 5), col_names = c("beta", "cov"))
summarize_regions(bedfiles, regions, fun = c("mean", "stddev"), columns = c(4, 5), col_names = c("beta", "cov"))
summarize_regions(bedfiles, regions, fun = "sum", columns = 5, col_names = "coverage")
}
